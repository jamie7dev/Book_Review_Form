{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst useInput = initialValue => {\n  _s();\n\n  const [post, setPost] = useState(initialValue);\n\n  const onChangeHandler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setPost({ ...post,\n      [name]: value\n    });\n  };\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    if (post.username.trim() === \"\" || post.category.trim() === \"\" || post.title.trim() === \"\" || post.ingredients.trim() === \"\" || post.body.trim() === \"\") return alert(\"모든 칸을 채워주세요!\");\n    dispatch(addPost({ ...post,\n      id: id\n    }));\n    console.log({ ...post,\n      id: id\n    });\n    axios.post(\"http://localhost:3001/posts\", { ...post,\n      id: id\n    });\n    setPost(initialState); // number++;\n\n    navigate('/');\n  };\n\n  return [post, onChangeHandler, onSubmitHandler];\n};\n\n_s(useInput, \"DJichXM7y2sSaj9/VA6l78HdVW0=\");\n\nexport default useInput; // return (\n//   <div>\n//     <h1>useInput</h1>\n//     <input value={inputValue} onChange={handlerChange} />\n//      <button>확인</button>\n//   </div>\n// )\n// const onChangeHandler = (event) => {\n//   const { name, value } = event.target;\n//   setPost({ ...post, [name]: value});\n// };\n//setInputValue('');초기화","map":{"version":3,"names":["React","useState","useInput","initialValue","post","setPost","onChangeHandler","event","name","value","target","onSubmitHandler","preventDefault","username","trim","category","title","ingredients","body","alert","dispatch","addPost","id","console","log","axios","initialState","navigate"],"sources":["/Users/yoonchaewon/Desktop/dev/Food_-Recipe_/src/hooks/useInput.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst useInput = (initialValue) => {\n  const [post, setPost] = useState(initialValue);\n\n  const onChangeHandler = (event) => {\n    const { name, value } = event.target;\n    setPost({ ...post, [name]: value});\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    if (post.username.trim() === \"\" || post.category.trim() === \"\"  ||post.title.trim() === \"\" || post.ingredients.trim() === \"\"||   post.body.trim() === \"\") return alert(\"모든 칸을 채워주세요!\");\n    dispatch(addPost({ ...post, id: id }));\n    console.log({...post, id: id})\n    axios.post(\"http://localhost:3001/posts\", { ...post, id: id });\n    setPost(initialState);\n    // number++;\n    navigate('/')\n  };\n\n  return [post, onChangeHandler, onSubmitHandler];\n};\n\nexport default useInput;\n\n// return (\n//   <div>\n//     <h1>useInput</h1>\n//     <input value={inputValue} onChange={handlerChange} />\n//      <button>확인</button>\n//   </div>\n// )\n\n// const onChangeHandler = (event) => {\n//   const { name, value } = event.target;\n//   setPost({ ...post, [name]: value});\n// };\n\n//setInputValue('');초기화"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAIC,YAAD,IAAkB;EAAA;;EACjC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACE,YAAD,CAAhC;;EAEA,MAAMG,eAAe,GAAIC,KAAD,IAAW;IACjC,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,KAAK,CAACG,MAA9B;IACAL,OAAO,CAAC,EAAE,GAAGD,IAAL;MAAW,CAACI,IAAD,GAAQC;IAAnB,CAAD,CAAP;EACD,CAHD;;EAKA,MAAME,eAAe,GAAIJ,KAAD,IAAW;IACjCA,KAAK,CAACK,cAAN;IACA,IAAIR,IAAI,CAACS,QAAL,CAAcC,IAAd,OAAyB,EAAzB,IAA+BV,IAAI,CAACW,QAAL,CAAcD,IAAd,OAAyB,EAAxD,IAA8DV,IAAI,CAACY,KAAL,CAAWF,IAAX,OAAsB,EAApF,IAA0FV,IAAI,CAACa,WAAL,CAAiBH,IAAjB,OAA4B,EAAtH,IAA6HV,IAAI,CAACc,IAAL,CAAUJ,IAAV,OAAqB,EAAtJ,EAA0J,OAAOK,KAAK,CAAC,cAAD,CAAZ;IAC1JC,QAAQ,CAACC,OAAO,CAAC,EAAE,GAAGjB,IAAL;MAAWkB,EAAE,EAAEA;IAAf,CAAD,CAAR,CAAR;IACAC,OAAO,CAACC,GAAR,CAAY,EAAC,GAAGpB,IAAJ;MAAUkB,EAAE,EAAEA;IAAd,CAAZ;IACAG,KAAK,CAACrB,IAAN,CAAW,6BAAX,EAA0C,EAAE,GAAGA,IAAL;MAAWkB,EAAE,EAAEA;IAAf,CAA1C;IACAjB,OAAO,CAACqB,YAAD,CAAP,CANiC,CAOjC;;IACAC,QAAQ,CAAC,GAAD,CAAR;EACD,CATD;;EAWA,OAAO,CAACvB,IAAD,EAAOE,eAAP,EAAwBK,eAAxB,CAAP;AACD,CApBD;;GAAMT,Q;;AAsBN,eAAeA,QAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}