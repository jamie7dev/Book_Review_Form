{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"; // 초기값\n\nconst initialState = {\n  posts: [],\n  isLoading: false,\n  error: null\n};\nexport const __getPosts = createAsyncThunk(\"posts/getPosts\", async (payload, thunkAPI) => {\n  try {\n    const data = await axios.get(\"http://localhost:3001/posts\");\n    return thunkAPI.fulfillWithValue(data.data), console.log(data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const formSlice = createSlice({\n  name: \"form\",\n  initialState,\n  reducers: {\n    // Reducer 안에 만든 함수 자체가 리듀서 로직이자, Action creator\n    addPost: (state, action) => {\n      const addPost = [...state, action.payload];\n      return addPost;\n    },\n    extraReducers: {\n      [__getPosts.pending]: state => {\n        state.isLoading = true; // 네트워크 요청이 시작되면 로딩상태를 true로 변경합니다.\n      },\n      [__getPosts.fulfilled]: (state, action) => {\n        state.isLoading = false;\n        console.log(state); // 네트워크 요청이 끝났으니, false로 변경합니다.\n\n        state.posts = action.payload; // Store에 있는 todos에 서버에서 가져온 todos를 넣습니다.\n      },\n      [__getPosts.rejected]: (state, action) => {\n        state.isLoading = false; // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n\n        state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n      }\n    }\n  }\n});\nexport const {\n  addPost\n} = formSlice.actions;\nexport default formSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","posts","isLoading","error","__getPosts","payload","thunkAPI","data","get","fulfillWithValue","console","log","rejectWithValue","formSlice","name","reducers","addPost","state","action","extraReducers","pending","fulfilled","rejected","actions","reducer"],"sources":["/Users/yoonchaewon/Desktop/dev/Book_Review/src/redux/modules/form.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// 초기값\n\nconst initialState = {\n  posts: [],\n  isLoading: false,\n  error: null,\n};\nexport const __getPosts = createAsyncThunk(\n  \"posts/getPosts\",\n  async (payload, thunkAPI) => {\n    try {\n      const data = await axios.get(\"http://localhost:3001/posts\");\n      return thunkAPI.fulfillWithValue(data.data), console.log(data);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\n\nexport const formSlice = createSlice({\n  name : \"form\",\n  initialState,\n  reducers: { // Reducer 안에 만든 함수 자체가 리듀서 로직이자, Action creator\n    addPost: (state, action) => {\n      const addPost = [...state, action.payload];\n      return addPost;     \n    },\n\n  extraReducers: {\n    [__getPosts.pending]: (state) => {\n      state.isLoading = true; // 네트워크 요청이 시작되면 로딩상태를 true로 변경합니다.\n    },\n    [__getPosts.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      console.log(state)  // 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.posts = action.payload; // Store에 있는 todos에 서버에서 가져온 todos를 넣습니다.\n    },\n    [__getPosts.rejected]: (state, action) => {\n      state.isLoading = false;  // 에러가 발생했지만, 네트워크 요청이 끝났으니, false로 변경합니다.\n      state.error = action.payload; // catch 된 error 객체를 state.error에 넣습니다.\n    },\n    },\n   },\n  },\n);\n\n\nexport const { addPost } = formSlice.actions;\nexport default formSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,SAAS,EAAE,KAFQ;EAGnBC,KAAK,EAAE;AAHY,CAArB;AAKA,OAAO,MAAMC,UAAU,GAAGP,gBAAgB,CACxC,gBADwC,EAExC,OAAOQ,OAAP,EAAgBC,QAAhB,KAA6B;EAC3B,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,6BAAV,CAAnB;IACA,OAAOF,QAAQ,CAACG,gBAAT,CAA0BF,IAAI,CAACA,IAA/B,GAAsCG,OAAO,CAACC,GAAR,CAAYJ,IAAZ,CAA7C;EACD,CAHD,CAGE,OAAOJ,KAAP,EAAc;IACd,OAAOG,QAAQ,CAACM,eAAT,CAAyBT,KAAzB,CAAP;EACD;AACF,CATuC,CAAnC;AAaP,OAAO,MAAMU,SAAS,GAAGf,WAAW,CAAC;EACnCgB,IAAI,EAAG,MAD4B;EAEnCd,YAFmC;EAGnCe,QAAQ,EAAE;IAAE;IACVC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1B,MAAMF,OAAO,GAAG,CAAC,GAAGC,KAAJ,EAAWC,MAAM,CAACb,OAAlB,CAAhB;MACA,OAAOW,OAAP;IACD,CAJO;IAMVG,aAAa,EAAE;MACb,CAACf,UAAU,CAACgB,OAAZ,GAAuBH,KAAD,IAAW;QAC/BA,KAAK,CAACf,SAAN,GAAkB,IAAlB,CAD+B,CACP;MACzB,CAHY;MAIb,CAACE,UAAU,CAACiB,SAAZ,GAAwB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;QACzCD,KAAK,CAACf,SAAN,GAAkB,KAAlB;QACAQ,OAAO,CAACC,GAAR,CAAYM,KAAZ,EAFyC,CAErB;;QACpBA,KAAK,CAAChB,KAAN,GAAciB,MAAM,CAACb,OAArB,CAHyC,CAGX;MAC/B,CARY;MASb,CAACD,UAAU,CAACkB,QAAZ,GAAuB,CAACL,KAAD,EAAQC,MAAR,KAAmB;QACxCD,KAAK,CAACf,SAAN,GAAkB,KAAlB,CADwC,CACd;;QAC1Be,KAAK,CAACd,KAAN,GAAce,MAAM,CAACb,OAArB,CAFwC,CAEV;MAC/B;IAZY;EANL;AAHyB,CAAD,CAA7B;AA4BP,OAAO,MAAM;EAAEW;AAAF,IAAcH,SAAS,CAACU,OAA9B;AACP,eAAeV,SAAS,CAACW,OAAzB"},"metadata":{},"sourceType":"module"}